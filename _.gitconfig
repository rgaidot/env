[user]
	# name = First Last
	# email = Email
	
[github]
	# user = username
	# token = Github Token

[color]
	diff = auto
	status = auto
	branch = auto
	interactive = auto
	ui = true
	pager = true

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
	whitespace = red reverse

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[core]
	editor = vim
	excludesfile = ~/.gitignore
	whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol

[push]
  default = current

[alias]
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
	lgn = "!f() { git log --graph --pretty=format:'%Cred%H%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --date=relative $@ | git name-rev --stdin --name-only ; } ; f"
	log1 = log --pretty=oneline --abbrev-commit --decorate
	last = cat-file commit HEAD
	st = "!f() { git ls-files --exclude-standard -t -u -s -m -d $@ | sed -e 's/C.*\t/C /' ; } ; f"
	sto = st -o
	ds = diff --stat
	cds = !git ds --cached
	s = "!git diff --name-status | sed -e 's/^/W /' ; git diff --cached --name-status | sed -e 's/^/C /'"
	editunmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
	addunmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
	up = !git remote update
	pushall = !git remote | xargs -n1 git push
	pushalltags = !git remote | xargs -n1 git push --tags
	vgc = repack -f -a -d --depth=250 --window=250
	
[merge]
	tool = vimdiff
